// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	api "github.com/hashicorp/consul/api"
	mock "github.com/stretchr/testify/mock"

	server "github.com/go-park-mail-ru/2019_1_Escapade/internal/pkg/server"
)

// ConsulServiceI is an autogenerated mock type for the ConsulServiceI type
type ConsulServiceI struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *ConsulServiceI) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Health provides a mock function with given fields:
func (_m *ConsulServiceI) Health() *api.Health {
	ret := _m.Called()

	var r0 *api.Health
	if rf, ok := ret.Get(0).(func() *api.Health); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Health)
		}
	}

	return r0
}

// Init provides a mock function with given fields: input
func (_m *ConsulServiceI) Init(input *server.ConsulInput) server.ConsulServiceI {
	ret := _m.Called(input)

	var r0 server.ConsulServiceI
	if rf, ok := ret.Get(0).(func(*server.ConsulInput) server.ConsulServiceI); ok {
		r0 = rf(input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(server.ConsulServiceI)
		}
	}

	return r0
}

// Run provides a mock function with given fields:
func (_m *ConsulServiceI) Run() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ServiceID provides a mock function with given fields:
func (_m *ConsulServiceI) ServiceID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ServiceName provides a mock function with given fields:
func (_m *ConsulServiceI) ServiceName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
