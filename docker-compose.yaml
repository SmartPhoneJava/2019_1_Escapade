version: '3'
services:

  traefik:
    image: traefik:v1.7.18
    command: 
      --api --web --docker --docker.domain=docker.localhost #--consul --consul.endpoint=consul:8500 # Enables the web UI and tells Traefik to listen to docker
    ports:
      - "8081:80"     # The HTTP port
      - "8079:8080" # The Web UI (enabled by --api)
    #network_mode: "host"
    #hostname: localhost
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./extra/traefik/traefik.toml:/traefik.toml # Traefik configuration file

  whoami:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    labels:
      - "traefik.frontend.rule=Host:whoami.docker.localhost"
  
  pg:
    build:
      dockerfile: Dockerfile
      context: ./extra/postgresql/main/
    ports:
      - "5429:5432"    

  pg-auth:
    image: postgres:11.2-alpine
    environment:
      POSTGRES_USER: 'auth' 
      POSTGRES_PASSWORD: 'auth'
      POSTGRES_DB: 'authbase'
    ports:
      - "5431:5432"    

  pg-ery:
    build:
      dockerfile: Dockerfile
      context: ./extra/postgresql/ery/
    ports:
      - "5430:5432"   

#sudo docker inspect --format '{{(index .NetworkSettings.Networks "2019_1_escapade_default").IPAddress }}' 2019_1_escapade_api_1

  api:
    build:
      dockerfile: ./cmd/services/api/Dockerfile
      context: .
    depends_on:
      - "pg"
      - "consul"
      - "auth"
    ports:
      - 3001:3001
    environment:
      - CONSUL_ADDRESS=consul-agent-1
    command: /bin/sh -c "./bin/api cmd/services/api/api.json internal/photo/photo.json secret.json 3001 8500"
    logging:
      options:
        max-size: 10m

  ery:
    build:
      dockerfile: ./cmd/services/ery/Dockerfile
      context: .
    depends_on:
      - "pg-ery"
      - "consul"
      - "auth"
    ports:
      - 3100:3100
    environment:
      - CONSUL_ADDRESS=consul-agent-1
    command: /bin/sh -c "go run cmd/services/ery/main.go cmd/services/ery/ery.json internal/photo/eryphoto.json cmd/services/ery/secret2.json 3100 8500"
    volumes:
    - ./:/escapade
    logging:
      options:
        max-size: 10m

  chat:
    build:
      dockerfile: ./cmd/services/chat/Dockerfile
      context: .
    depends_on:
      - "pg"
    environment:
      - CONSUL_ADDRESS=consul-agent-1
    ports:
      - 3060:3060
    command: /bin/sh -c "./wait-for-it.sh pg:5432 && ./bin/chat cmd/services/chat/chat.json 3060 8500"
    logging:
      options:
        max-size: 10m

  ### auth ###

  auth:
    build:
      dockerfile: ./cmd/services/auth/Dockerfile
      context: .
    depends_on:
      - "pg"
      - "pg-auth"
    #ports:
    #  - 3003:3003
    environment:
      - CONSUL_ADDRESS=consul-agent-1
    command: /bin/sh -c " ./bin/auth cmd/services/auth/auth.json 3003 8500 2345"
    labels:
      - "traefik.backend=machine-echo"
      - "traefik.frontend.rule=Host:machine-echo.example.com"
    logging:
      options:
        max-size: 10m
        
  # loader:
  #   build:
  #     dockerfile: ./cmd/services/configLoader/Dockerfile
  #     context: .
  #   depends_on:
  #     - "consul-agent-1"
  #     - "vault"
  #   ports:
  #     - 3007:3007
  #   command: /bin/sh -c "./bin/loader config.json"
  #   logging:
  #     options:
  #       max-size: 10m

  game:
    build:
      dockerfile: ./cmd/services/game/Dockerfile
      context: .
    depends_on:
       - "pg"
    ports:
      - 3002:3002
    environment:
      - CONSUL_ADDRESS=consul-agent-1
      - AUTHSERVICE_URL=auth:3333
      - PORT_GAME_URL=:3002
    command: /bin/sh -c "./bin/game cmd/services/game/game.json internal/photo/photo.json secret.json internal/constants/field.json internal/constants/room.json 3002 8500"

  # history:
  #   build:
  #     dockerfile: ./history/Dockerfile
  #     context: .
  #   depends_on:
  #     - "pg"
  #     - "auth"
  #   ports:
  #     - 3004:3004
  #   environment:
  #     - CONSUL_ADDRESS=consul
  #     - DATABASE_URL=postgres://docker:docker@pg:5432/docker?sslmode=disable
  #     - AUTHSERVICE_URL=auth:3333
  #     - PORT_HISTORY_URL=:3004
  #   command: /bin/sh -c "./bin/history"

  prometheus:
    build:
      context: ./extra/prometheus
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    
  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
     - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
     - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
     - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000

  ### discovery ###

  ## consul servers ##
  consul-server-1:
    build:
      context: ./extra/consul
      dockerfile: Dockerfile
    ports:
      - 8501:8500
    command: agent -server --bootstrap_expect 1 -join consul -node server1 -ui-dir /ui -config-file=/consul/config/server/consul-config.json

  consul-server-2:
    build:
      context: ./extra/consul
      dockerfile: Dockerfile
    ports:
      - 8502:8500
    command: agent -server --bootstrap_expect 1 -join consul -node server2 -ui-dir /ui -config-file=/consul/config/server/consul-config.json

  consul-server-3:
    build:
      context: ./extra/consul
      dockerfile: Dockerfile
    ports:
      - 8503:8500
      - 8303:8301
    command: agent -server --bootstrap_expect 1 -join consul -node server3 -ui-dir /ui -config-file=/consul/config/server/consul-config.json
 
  ## consul bootstrap ##
  consul:
    build:
      context: ./extra/consul
      dockerfile: Dockerfile
    ports:
      - 8400:8400
      - 8500:8500
      - 8600:53/udp
    command: agent -server -bootstrap -node bootstrap -bind 0.0.0.0 -client 0.0.0.0 -ui -config-file=/consul/config/bootstrap/consul-config.json

  ## consul agents ##
 
  consul-agent-1:
    build:
      context: ./extra/consul
      dockerfile: Dockerfile
    ports:
      - 8511:8500
      - 8311:8301
    command: agent -join consul-server-1 -node agent1 -bind 0.0.0.0 -client 0.0.0.0 -ui -config-file=/consul/config/client/consul-config.json

  consul-agent-2:
    build:
      context: ./extra/consul
      dockerfile: Dockerfile
    ports:
      - 8512:8500
      - 8312:8301
    command: agent -join consul-server-2 -node agent2 -bind 0.0.0.0 -client 0.0.0.0 -ui -config-file=/consul/config/client/consul-config.json
 
  consul-agent-3:
    build:
      context: ./extra/consul
      dockerfile: Dockerfile
    ports:
      - 8513:8500
      - 8313:8301
    command: agent -join consul-server-3 -node agent3 -bind 0.0.0.0 -client 0.0.0.0 -ui -config-file=/consul/config/client/consul-config.json

  vault:
    build:
      context: ./extra/vault
      dockerfile: Dockerfile
    ports:
      - 8200:8200
    volumes:
      - ./extra/vault/config:/vault/config
      - ./extra/vault/policies:/vault/policies
      - ./extra/vault/data:/vault/data
      - ./extra/vault/logs:/vault/logs
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
    command: server -config=config/vault-config.json
    cap_add:
      - IPC_LOCK
    depends_on:
      - consul-agent-1

networks:
  backend:
    driver: bridge

