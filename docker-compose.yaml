version: '3'
services:

  pg:
    
    image: postgres:11.2-alpine
    environment:
      POSTGRES_USER: 'docker'
      POSTGRES_PASSWORD: 'docker'
      POSTGRES_DB: 'docker'
  
  redis:
    image: redis

  api:
    build:
      dockerfile: ./api/Dockerfile
      context: .
    depends_on:
      - "pg"
      - "auth"
    ports:
      - 3001:3001
    environment:
      - DATABASE_URL=postgres://docker:docker@pg:5432/docker?sslmode=disable
      - AUTHSERVICE_URL=auth:3333
      - PORT_API_URL=:3001
    command: /bin/sh -c "./wait-for-it.sh pg:5432 && ./wait-for-it.sh auth:3333 && ./bin/api"
  
  auth:
    build:
      dockerfile: ./auth/Dockerfile
      context: .
    depends_on:
      - "redis"
    ports:
      - 3333:3333
    environment:
      - REDIS_URL=redis://:@redis:6379
      - PORT_AUTH_URL=:3333
    command: /bin/sh -c "./wait-for-it.sh redis:6379 && ./bin/auth"

  game:
    build:
      dockerfile: ./game/Dockerfile
      context: .
    depends_on:
       - "pg"
      - "auth"
    ports:
      - 3002:3002
    environment:
      - DATABASE_URL=postgres://docker:docker@pg:5432/docker?sslmode=disable
      - AUTHSERVICE_URL=auth:3333
      - PORT_GAME_URL=:3002
    command: /bin/sh -c "./wait-for-it.sh redis:6379 && ./bin/auth"

  history:
    build:
      dockerfile: ./history/Dockerfile
      context: .
    depends_on:
      - "pg"
      - "auth"
    ports:
      - 3004:3004
    environment:
      - DATABASE_URL=postgres://docker:docker@pg:5432/docker?sslmode=disable
      - AUTHSERVICE_URL=auth:3333
      - PORT_HISTORY_URL=:3004
    command: /bin/sh -c "./wait-for-it.sh redis:6379 && ./bin/auth"

  chat:
    build:
      dockerfile: ./Dockerfile
      context: ./escapade-chat
    depends_on:
      - "pg"
    ports:
      - 3005:3005
    environment:
      - DATABASE_URL=postgres://docker:docker@pg:5432/docker?sslmode=disable
      - AUTHSERVICE_URL=auth:3333
    command: /bin/sh -c "./wait-for-it.sh pg:5432 && ./wait-for-it.sh auth:3333 && ./bin/chat"

  nginx:

   build: .
   restart: always

   ports:
     - "80:80"
   deploy:
     mode: replicated
     replicas: 3

   depends_on:
     - api
     - chat

